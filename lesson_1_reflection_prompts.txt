How did viewing a diff between two versions of a file help you see the bug that
was introduced?

	I can easily detect the specific changes made within the files 

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

	I can easily go back to a previous version of the file for reference/inspection

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

	Manually committing gives you the freedom and flexibility to commit only important changes sparingly, whereas automatic version saving can create a lot of unecessary and meaningless committs that could actually prove to be counter-productive    

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

	Because in version control for code files, multiple files could be linked with each other, so it would make more sense to save them together rather than separately

How can you use the commands git log and git diff to view the history of files?

    git log shows the complteet log of all previous commits and git diff shows the difference between any 2 commits

How might using version control make you more confident to make changes that
could break something?

    You can try out new/different things in your code without worrying about breaking it as you always have the option to go back to a previous version of the code file before it broke.  

Now that you have your workspace set up, what do you want to try using Git for?

    Working on any kind of code based project or even my school course projects where I need to collaborate with my classmates
